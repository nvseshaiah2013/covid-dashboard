{"version":3,"sources":["constants/urls.js","resources/useData.js","components/LoadingComponent.js","components/HomeComponent.js","components/UpdatesComponent.js","components/DonateComponent.js","resources/symptoms.js","components/PrecautionsComponent.js","constants/constants.js","components/ZonesIndiaComponent.js","components/DayWiseGraphComponent.js","components/StateGraph.js","resources/sidenav.js","components/NavbarList.js","components/HeaderComponent.js","components/FooterComponent.js","components/HelplineComponent.js","App.js","serviceWorker.js","themes/default.js","index.js"],"names":["ZONES_INDIA","COUNTRY_DATA","UPDATES","STATES_TOTAL","zones","axios","get","then","data","updates","countryData","statesTotal","states","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","Loading","classes","React","useState","open","setOpen","Backdrop","className","onClick","CircularProgress","content","padding","spacing","fontSize","lineHeight","letterSpacing","boxBorderConfirm","flexGrow","textAlign","backgroundColor","borderRadius","boxBorderFatal","boxBorderActive","boxBorderRecover","space","fontSize2rem","fontSize15rem","fontWeight","flexBox","display","overflowX","justifyContent","msOverflowStyle","scrollbarWidth","table","tableCell","paddingRight","paddingLeft","tableCellHeading","paddingBottom","marginBottom","link","toolbar","mixins","ShowAnimation","spring","useSpring","total","from","config","friction","mass","tension","p","interpolate","v","Math","floor","ShowOverview","latestData","stateData","caseData","finalData","totalconfirmed","totalactive","totaldeceased","totalrecovered","dailyconfirmed","dailyrecovered","dailydeceased","stateTotal","filter","state","parseInt","getOverview","Grid","container","item","xs","StateTable","orderBy","setOrderBy","order","setOrder","type","setType","totalRow","row","tableData","stableSort","getComparator","map","index","key","push","TableContainer","Table","stickyHeader","TableHead","TableRow","headCells","headCell","TableCell","id","align","numeric","sortDirection","parameter","handleClick","dataType","Tooltip","placement","arrow","title","label","enterTouchDelay","IconButton","aria-label","Typography","variant","substr","TableSortLabel","active","direction","TableBody","StateTableRow","hover","style","statecode","to","statenotes","length","split","note","confirmed","deltaconfirmed","migratedother","deaths","deltadeaths","recovered","deltarecovered","descendingComparator","a","b","moment","isBefore","isAfter","array","comparator","stabilizedThis","el","sort","Home","props","overview","useSWR","revalidateOnReconnect","Container","maxWidth","tempDate","subtract","forEach","format","findLastUpdatedTime","listItem","border","opacity","transform","margin","Updates","slice","reverse","update","date","diff","timestamp","hours","minutes","items","keys","heading","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","width","marginTop","marginLeft","button","textDecoration","imageResponsive","height","Donate","Box","m","component","Button","href","target","rel","src","alt","symptoms","name","image","description","precautions","root","leftBorder","borderLeft","marginRight","chips","flexWrap","inline","Description","selected","Precautions","setSelected","precautionsList","precaution","ListItem","ListItemText","primary","Fragment","secondary","symptom","Chip","STATE_NAMES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","TT","UN","DisplayZones","districts","district","zone","districtcode","ZonesIndia","selectedState","setSelectedState","stateNames","reduce","statesList","currentValue","Object","groupStates","avatar","Avatar","native","div","tooltip","position","top","left","borderWidth","borderStyle","borderColor","tooltiptext","span","ShowChart","startDate","setStartDate","max","acc","curval","stepSize","toFixed","chartData","labels","day","datasets","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","responsive","scales","yAxes","ticks","min","ButtonGroup","size","fullWidth","ShowPieChart","pieData","sum","percent","value","setTooltip","_chartRef","createRef","chart","ref","tooltips","enabled","intersect","custom","tooltipModel","current","chartInstance","canvas","getBoundingClientRect","caretX","caretY","labelColors","body","setTimeout","setPositionAndData","hidden","parseFloat","DayWiseGraph","dayWiseData","refreshWhenOffline","dayWiseDataFiltered","tempData","paddingTop","tableheaders","_id","datatype","cell","tested","deceased","StatePieChart","StateGraph","match","total_data","p_total_data","setPTotalData","useEffect","temp","stateObj","processTotalData","params","list","icon","url","show","navStyle","listItemIcon","listItemText","navLink","activeNavLink","NavbarList","navlist","exact","activeClassName","disableGutters","ListItemIcon","List","breakpoints","up","flexShrink","appBar","menuButton","drawerPaper","navbar","Header","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","CssBaseline","AppBar","Toolbar","edge","md","sm","Hidden","smUp","implementation","Drawer","anchor","onClose","paper","ModalProps","keepMounted","Footer","boxShadow","text","Helpline","App","element","path","Boolean","window","location","hostname","createMuiTheme","typography","fontFamily","join","palette","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38aa0dbb.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.covid19.org';\nexport const ZONES_INDIA = 'https://api.covid19india.org/zones.json';\nexport const COUNTRY_DATA = 'https://api.covid19india.org/data.json';\nexport const DISTRICT_WISE = 'https://api.covid19india.org/state_district_wise.json';\nexport const UPDATES = 'https://api.covid19india.org/updatelog/log.json';\nexport const STATES_DAILY = 'https://api.covid19india.org/states_daily.json';\nexport const STATES_TOTAL = 'https://api.covid19india.org/v3/min/data.min.json';","import axios from 'axios';\nimport { ZONES_INDIA, UPDATES, COUNTRY_DATA, DISTRICT_WISE, STATES_DAILY, STATES_TOTAL } from '../constants/urls';\n\nexport const zones = () => axios.get(ZONES_INDIA).then((zones) => zones.data);\nexport const updates = () => axios.get(UPDATES).then((updates) => updates.data);\nexport const countryData = () => axios.get(COUNTRY_DATA).then((countryData) => countryData.data);\nexport const districtWiseData = () => axios.get(DISTRICT_WISE).then((districtWiseData) => districtWiseData.data);\nexport const statesDaily = () => axios.get(STATES_DAILY).then((states) => states.data);\nexport const statesTotal = () => axios.get(STATES_TOTAL).then((states) => states.data);\n\n","import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Backdrop, CircularProgress } from '@material-ui/core';\n// import { TextareaAutosize } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst Loading = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default Loading;","import {\n    Container, Grid, Table, TableBody, TableCell,\n    TableHead, TableRow, TableSortLabel, Typography, Tooltip, TableContainer, IconButton\n} from '@material-ui/core';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport useSWR from 'swr';\nimport { COUNTRY_DATA } from '../constants/urls';\nimport { countryData } from '../resources/useData';\nimport Loading from './LoadingComponent';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { animated, useSpring } from 'react-spring';\nimport  { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        padding: theme.spacing(3),\n        fontSize: '1rem',\n        lineHeight: '0.2rem',\n        letterSpacing: '1.1px'\n    },\n    boxBorderConfirm: {\n        color: '#000FF1',\n        flexGrow: 1,\n        textAlign: 'center',\n        padding: '0.1rem',\n        '&:hover': {\n            backgroundColor: 'rgba(0,15,241,0.1)',\n            borderRadius: '8px'\n        }\n    },\n    boxBorderFatal: {\n        color: '#ff3838',\n        flexGrow: 1,\n        textAlign: 'center',\n        padding: '0.1rem',\n        '&:hover': {\n            backgroundColor: 'rgba(255,56,56,0.1)',\n            borderRadius: '8px'\n        }\n    },\n    boxBorderActive: {\n        color: '#a0a39e',\n        flexGrow: 1,\n        textAlign: 'center',\n        padding: '0.1rem',\n        '&:hover': {\n            backgroundColor: 'rgba(160,163,158,0.1)',\n            borderRadius: '8px'\n        }\n    },\n    boxBorderRecover: {\n        color: '#0cad00',\n        textAlign: 'center',\n        padding: '0.1rem',\n        '&:hover': {\n            backgroundColor: 'rgba(12,174,0,0.1)',\n            borderRadius: '8px'\n        }\n    },\n    space: {\n        flexGrow: '0'\n    },\n    fontSize2rem: {\n        fontSize: '1.1rem'\n    },\n    fontSize15rem: {\n        fontSize: '0.8rem',\n        fontWeight: 'bolder'\n    },\n    flexBox: {\n        display: 'flex',\n        overflowX: 'scroll',\n        justifyContent: 'space-between',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n\n            msOverflowStyle: 'none',  /* IE and Edge */\n            scrollbarWidth: 'none',\n        }\n    },\n    table: {\n        overflowX: 'scroll',\n    },\n    tableCell: {\n        paddingRight: '2px',\n        paddingLeft: '0px'\n    },\n    tableCellHeading : {\n        paddingRight : 0,\n        paddingLeft : 0,\n        paddingBottom : 0,\n        marginBottom : 0\n    },\n    link : {\n        color : 'white'\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\n\nconst findLastUpdatedTime = (data) => {\n    let tempDate = moment().subtract(10, 'days');\n    data.forEach((state) => {\n        if (moment(state['lastupdatedtime'], 'DD/MM/YYYY HH:mm:ss').isAfter(tempDate)) {\n            tempDate = moment(state['lastupdatedtime'], 'DD/MM/YYYY HH:mm:ss');\n        }\n    });\n    return moment(tempDate).format('Do, MMM HH:mm');\n}\n\nconst Home = (props) => {\n    const classes = useStyles();\n    const { data: overview } = useSWR(COUNTRY_DATA, countryData, { revalidateOnReconnect: true });\n    return (\n        <Container maxWidth=\"md\">\n            <div className={classes.toolbar} />\n            <Typography variant=\"h4\" align=\"center\">\n                Overview Of Cases In India\n            </Typography>\n            <Typography variant=\"subtitle2\" align=\"center\">{overview ? `Last Updated On : ${findLastUpdatedTime(overview['statewise'])}` : ''}</Typography>\n            <div className={classes.toolbar} />\n            {overview ? <ShowOverview data={overview} /> : <Loading />}\n            <Typography variant=\"subtitle1\" align=\"right\" color=\"error\"> *Excludes Migrated/Foreign Cases</Typography>\n            <Typography variant=\"h4\" align=\"center\">\n                <div className={classes.toolbar} />\n                Overview Of Cases - State Wise\n            <div className={classes.toolbar} />\n            </Typography>\n            {overview ? <StateTable data={overview['statewise']} /> : <Loading />}\n        </Container>\n    );\n};\n\nconst getOverview = (stateData, caseData) => {\n    let finalData = {\n        totalconfirmed: 0,\n        totalactive: 0,\n        totaldeceased: 0,\n        totalrecovered: 0,\n        dailyconfirmed: 0,\n        dailyrecovered: 0,\n        dailydeceased: 0,\n    }\n    let stateTotal = stateData.filter((state) => state['statecode'] === 'TT')[0];\n    finalData['totalactive'] = parseInt(stateTotal['active']);\n    finalData['totalconfirmed'] = parseInt(stateTotal['confirmed']);\n    finalData['totaldeceased'] = parseInt(stateTotal['deaths']);\n    finalData['totalrecovered'] = parseInt(stateTotal['recovered']);\n    finalData['dailyconfirmed'] = parseInt(stateTotal['deltaconfirmed']);\n    finalData['dailydeceased'] = parseInt(stateTotal['deltadeaths']);\n    finalData['dailyrecovered'] = parseInt(stateTotal['deltarecovered']);\n    return finalData;\n}\n\nconst ShowAnimation = ({ data }) => {\n    const classes = useStyles();\n    const spring = useSpring({\n        total: data,\n        from: { total: 0 },\n        config: {\n            friction: 120,\n            mass: 20,\n            tension: 200\n        }\n    });\n    return <animated.p className={classes.fontSize2rem}>{spring.total.interpolate(v => Math.floor(v))}</animated.p>\n}\n\nconst ShowOverview = ({ data }) => {\n    const classes = useStyles();\n    let latestData = getOverview(data['statewise'], data['cases_time_series']);\n    return (\n        <Grid container spacing={1}>\n            <Grid className={classes.boxBorderConfirm} item xs={3}>\n                <ShowAnimation data={latestData.totalconfirmed} />\n                <p className={classes.fontSize2rem}>Total</p>\n                <p>  {latestData.dailyconfirmed > 0 ? latestData.dailyconfirmed : ''}<TrendingUpIcon /></p>\n            </Grid>\n            <Grid className={classes.boxBorderFatal} item xs={3}>\n                <ShowAnimation data={latestData.totaldeceased} />\n                <p className={classes.fontSize2rem}>Fatal</p>\n                <p> {latestData.dailydeceased} <TrendingUpIcon /></p>\n            </Grid>\n            <Grid className={classes.space} />\n\n            <Grid className={classes.boxBorderRecover} item xs={3}>\n                <ShowAnimation data={latestData.totalrecovered} />\n                <p className={classes.fontSize2rem}>Cured</p>\n                <p>{latestData.dailyrecovered} <TrendingUpIcon /></p>\n            </Grid>\n            <Grid className={classes.space} />\n\n            <Grid className={classes.boxBorderActive} item xs={3}>\n                <ShowAnimation data={latestData.totalactive} />\n                <p className={classes.fontSize2rem}>Active</p>\n                <p><TrendingUpIcon /></p>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst StateTable = ({ data }) => {\n    const classes = useStyles();\n    const [orderBy, setOrderBy] = useState('state');\n    const [order, setOrder] = useState('asc');\n    const [type, setType] = useState('string');\n    let totalRow = data.filter((row) => row['statecode'] === 'TT')[0];\n    data = stableSort(data.filter((row) => row['statecode'] !== 'TT'), getComparator(order, orderBy, type));\n    const tableData = data.map((state, index) => {\n        return (\n            <StateTableRow key={index} data={state} index={index} />\n        );\n    });\n    tableData.push(<StateTableRow key={46} data={totalRow} />);\n    const handleClick = (parameter, type) => {\n        if (parameter === orderBy) {\n            if (order === 'asc') {\n                setOrder('desc');\n            }\n            else {\n                setOrder('asc');\n            }\n        } else {\n            setOrder('asc');\n            setOrderBy(parameter);\n        }\n        setType(type);\n    }\n    return (\n        <TableContainer>\n            <Table stickyHeader={true} className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        {\n                            headCells.map((headCell) => {\n                                return (\n                                    <TableCell key={headCell.id}\n                                        align={headCell.numeric ? 'right' : 'left'}\n                                        sortDirection={orderBy === headCell.id ? order : false}\n                                        onClick={() => handleClick(headCell.id, headCell.dataType)}\n                                        className={classes.tableCellHeading}\n                                    >\n                                        <Tooltip placement=\"top\" arrow title={headCell.label} enterTouchDelay={100}>\n                                            <IconButton aria-label=\"Table Cell Information\" >\n                                                <Typography display=\"block\" variant=\"caption\">\n                                                    {headCell.label.substr(0, 1)}\n                                                </Typography>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <TableSortLabel\n                                            active={orderBy === headCell.id}\n                                            direction={orderBy === headCell.id ? order : 'asc'}\n                                        ></TableSortLabel>\n                                    </TableCell>\n                                );\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {tableData}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nconst StateTableRow = ({ index, data }) => {\n    const classes = useStyles();\n    return (\n        <TableRow hover key={index}>\n            <TableCell className={classes.tableCell} style={{ \"width\": \"20% !important\" }}>\n                { data.statecode !=='TT'? <Link to={\"/covid-dashboard/state/\" + data.statecode} className={classes.link}>\n                 {data.state}\n                </Link> : data.state } \n                {data.statenotes.length > 0 ?\n\n                    <Tooltip placement=\"bottom\" title={\n                        data.statenotes.split('\\n').map((note, index) => <p key={index}>{note}</p>)\n                    } arrow enterTouchDelay={100}>\n\n                        <IconButton aria-label=\"state notes\">\n                            <NotificationsActiveIcon fontSize=\"small\" />\n                        </IconButton>\n\n                    </Tooltip>\n\n                    : ''}\n            </TableCell>\n            <TableCell className={classes.tableCell}>\n                {/* <p> */}\n                <Typography display=\"block\" variant=\"subtitle2\">\n\n                    {data.confirmed}\n                </Typography>\n                <Typography variant=\"caption\" display=\"block\">\n                    {parseInt(data.deltaconfirmed) !== 0 ? <span>\n                        {data.deltaconfirmed > 0 ? data.deltaconfirmed : -data.deltaconfirmed}\n                        {data.deltaconfirmed > 0 ? <ArrowUpwardIcon fontSize=\"small\" color=\"error\" /> : <ArrowDownwardIcon style={{ color: \"green\" }} fontSize=\"small\" />}\n                    </span>\n                        : ''}\n                </Typography>\n                {/* </p>                */}\n            </TableCell>\n            <TableCell className={classes.tableCell}>{data.migratedother}</TableCell>\n            <TableCell className={classes.tableCell}>{data.active}</TableCell>\n            <TableCell className={classes.tableCell}>\n                <Typography variant=\"subtitle2\" display=\"block\">\n                    {data.deaths}\n                </Typography>\n                <Typography>\n                    {parseInt(data.deltadeaths) !== 0 ?\n                        <span>\n                            {data.deltadeaths > 0 ? data.deltadeaths : -data.deltadeaths}\n                            {data.deltadeaths > 0 ? <ArrowUpwardIcon fontSize=\"small\" color=\"error\" /> : <ArrowDownwardIcon fontSize=\"small\" style={{ color: \"green\" }} />}\n                        </span> : ''\n                    }\n                </Typography>\n            </TableCell>\n            <TableCell className={classes.tableCell}>\n                <Typography variant=\"subtitle2\">\n                    {data.recovered}\n                </Typography>\n                <Typography variant=\"caption\">\n                    {\n                        parseInt(data.deltarecovered) !== 0 ?\n                            <span>\n                                {data.deltarecovered > 0 ? data.deltarecovered : -data.deltarecovered}\n                                {data.deltarecovered > 0 ? <ArrowUpwardIcon fontSize=\"small\" style={{ color: \"green\" }} /> : <ArrowDownwardIcon fontSize=\"small\" color=\"error\" />}\n                            </span> : ''\n                    }\n                </Typography>\n            </TableCell>\n            {/* <TableCell className={classes.tableCell}>{moment(data.lastupdatedtime, 'DD/MM/YYYY HH:mm:ss').format('Do MMMM, HH:mm')}</TableCell> */}\n        </TableRow>\n    );\n}\n\nconst headCells = [\n    { id: 'state', dataType: 'string', label: 'State' },\n    { id: 'confirmed', dataType: 'number', label: 'Confirm' },\n    { id: 'migratedother', dataType: 'number', label: 'Migrated' },\n    { id: 'active', dataType: 'number', label: 'Active' },\n    { id: 'deaths', dataType: 'number', label: 'Deaths' },\n    { id: 'recovered', dataType: 'number', label: 'Cured' }\n    // { id: 'lastupdatedtime', dataType : 'date', label: 'Last Update' }\n];\n\nconst descendingComparator = (a, b, orderBy, type) => {\n    if (type === 'string') {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n    }\n    if (type === 'number') {\n        if (parseInt(b[orderBy]) < parseInt(a[orderBy])) {\n            return -1;\n        }\n        if (parseInt(b[orderBy]) > parseInt(a[orderBy])) {\n            return 1;\n        }\n    }\n    if (type === 'date') {\n        if (moment(b[orderBy], 'DD/MM/YYYY HH:mm:ss').isBefore(moment(a[orderBy], 'DD/MM/YYYY HH:mm:ss'))) {\n            return -1;\n        }\n        if (moment(b[orderBy], 'DD/MM/YYYY HH:mm:ss').isAfter(moment(a[orderBy], 'DD/MM/YYYY HH:mm:ss'))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nconst getComparator = (order, orderBy, type) => {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy, type)\n        : (a, b) => -descendingComparator(a, b, orderBy, type);\n}\n\nconst stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nexport default Home;","import React from 'react';\nimport { UPDATES } from '../constants/urls';\nimport useSWR from 'swr';\nimport { updates } from '../resources/useData';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { Trail } from 'react-spring/renderprops';\nimport Loading from './LoadingComponent';\n\nimport { Container, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n        border: '2px solid gray',\n        opacity: 0.8,\n        '&:hover': {\n            transform: 'translateY(1px)'\n        },\n        borderRadius: '3px 6px',\n        margin: '0.5rem 0',\n        padding: '1rem'\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\nconst getMinutesDiff = (date) => {\n    return moment().diff(date * 1000, 'minutes');\n};\n\nconst Updates = (props) => {\n    const classes = useStyles();\n    const { data } = useSWR(UPDATES, updates, { revalidateOnReconnect: true });\n    if (data) {\n        const updates = data.slice(-10).reverse().map((update, index) => {\n            let diff = getMinutesDiff(update.timestamp);\n            if (diff > 60) {\n                let hours = parseInt(diff / 60);\n                let minutes = diff % 60;\n                return (\n                    <div className={classes.listItem} key={index}>\n                        <Typography variant=\"subtitle1\">{hours} hours and {minutes} minutes ago</Typography>\n                        <Typography variant=\"body2\">{update.update}</Typography>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div key={index} className={classes.listItem}>\n                        <Typography variant=\"subtitle1\">{diff} minutes ago</Typography>\n                        <Typography variant=\"body2\">{update.update}</Typography>\n                    </div>\n                );\n            }\n        });\n        return (\n            <Container maxWidth=\"md\">\n                <div className={classes.toolbar} />\n                <Typography variant=\"h4\" style={{ \"textAlign\": \"center\" }}>Recent Updates</Typography>\n                <div className={classes.toolbar} />\n                <Trail items={updates} keys={item => item.key} from={{ opacity : 0 }} to={{ opacity : 1 }}>\n                    {item => props => <div style={props}>{item}</div>}\n                </Trail>\n\n            </Container>\n        );\n    }\n    else\n        return (\n            <Loading />\n        );\n}\n\nexport default Updates;","import React from 'react';\nimport { Container, Typography, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar : theme.mixins.toolbar,\n    heading : {\n        margin : '1vh',\n        borderBottom : '4px solid green',\n        borderBottomLeftRadius : '5px',\n        borderBottomRightRadius : '5px',\n        width : 'fit-content'\n    },\n    margin : {\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2)\n    },\n    marginLeft : {\n        marginLeft : theme.spacing(2)\n    },\n    button : {\n        textDecoration : 'none',\n        color : 'white'\n    },\n    imageResponsive : {\n        width : '100%',\n        height : 'auto'\n    }\n}));\n\nconst Donate = (props) =>{\n    const classes = useStyles();\n    return (\n        <Container maxWidth=\"md\">\n            <div className={classes.toolbar} />\n            <Typography variant=\"h4\">\n                Help India to Fight Coronavirus!\n            </Typography>\n            <Typography variant=\"h5\" color=\"secondary\" className={classes.margin}>\n                Donate to PMCARES Fund to help the Govt of India to help you.\n            </Typography>\n            <Typography className={classes.heading} variant=\"h5\">\n                About PMCARES\n            </Typography>\n            <Box m={4}>                \n                <Typography variant=\"body1\" component=\"p\">\n                    PM - CARES fund is aimed at strengthening the fight against COVID-19. It will furthur\n                    availability of quality treatment and encourage research on ways. I urge people from all walks of life\n                    to contribute to PM - CARES. Together, let's solve the challenges of the present and protect the future.\n                </Typography>\n\n            </Box>\n                <Typography variant=\"h5\" component=\"p\">\n                    Have got any Ideas to fight \n                   <span style={{\"color\" : \"red\"}}>\n                      #Coronavirus \n                    </span> \n                    <Button color=\"secondary\" variant=\"contained\" className={classes.marginLeft}>\n                        <a href=\"https://www.mygov.in/group-issue/share-your-ideas-suggestions-help-fight-coronavirus/\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.button}> Give Idea </a>\n                    </Button>\n                </Typography>\n\n                <Typography variant=\"body1\" component=\"p\" className={classes.margin}>\n                    For More Details Visit the PMCARES website.\n                </Typography>\n                <Box>\n                    <img src=\"/covid-dashboard/images/pmcares.jpg\" alt=\"PM CARES Details\" className={classes.imageResponsive}/>\n                </Box>\n                <Box style={{\"textAlign\": \"center\"}}>\n                    <Button style={{\"backgroundColor\":\"#4caf50\"}} variant=\"contained\"> <a href=\"https://www.pmcares.gov.in\" target=\"_blank\"  rel=\"noopener noreferrer\" className={classes.button}> Open PMCARES </a></Button>\n                </Box>\n        </Container>\n    );\n}\nexport default Donate;","export const symptoms = [\n    {\n        id : 1,\n        name : 'Cough',\n        image : '/images/cough.jpg',\n        description : 'A cough is a reflex action that clears your airway of irritants and mucus. There are two types of cough: productive and nonproductive. A productive cough produces phlegm or mucus, clearing it from the lungs. A nonproductive cough, also known as a dry cough, doesn’t produce phlegm or mucus. If due to corona virus then, dry cough is prevalent in coronavirus patients.'\n    },\n    {\n        id : 2,\n        name : 'Fever',\n        description : `As a person’s body temperature increases, they may feel cold until it levels off and stops rising.\n\n        Eating, exercise, sleeping, the time of day, and individual factors can also affect temperature.\n        \n        When an infection occurs, the immune system will launch an attack to try to remove the cause. A high body temperature is a normal part of this reaction.\n        \n        A fever will usually resolve on its own. However, if body temperature rises too high, it may be a due to coronavirus, consult a doctor immediately via phone`,\n        image : '/images/fever.jpg'\n    },\n    {\n        id : 3,\n        name : 'Chills',\n        description : `\n        The term “chills” refers to a feeling of being cold without an apparent cause. You get this feeling when your muscles repeatedly expand and contract and the vessels in your skin constrict. Chills can occur with a fever and cause shivering or shaking. This symptom was recently added to the common symptoms of coronavirus`,\n        image : ''\n    },\n    {\n        id : 4,\n        name : 'Muscle Pain',\n        description : 'The various parts of the body experience some pain when having coronavirus',\n        image : ''\n    },\n    {\n        id : 5,\n        name : 'Shortness Of Breath',\n        description : `Shortness of breath, or dyspnea, is an uncomfortable condition that makes it difficult to fully get air into your lungs. Problems with your heart and lungs can harm your breathing.\n\n        Some people may experience shortness of breath suddenly for short periods of time. Others may experience it over the long term — several weeks or more. In coronavirus patients all breathing related problems may occur including shortness of breath.`,\n        image :''\n    },\n    {\n        id : 6,\n        name : 'Sore Throat',\n        description : `A sore throat is a painful, dry, or scratchy feeling in the throat.\n\n        Pain in the throat is one of the most common symptoms. It accounts for more than 13 million visits to doctor’s offices each year.\n        \n        Most sore throats are caused by infections, or by environmental factors like dry air. Although a sore throat can be uncomfortable, it’ll usually go away on its own.`,\n        image : ''\n    },\n    {\n        id : 7,\n        name : 'Loss Of Smell',\n        description : 'Covid 19 is a respiratory disease. Hence, it was seen in several patients that they loss the smell and taste. Doctors are worried that some patients may never get back their sense of smell.'\n    }\n];\n\nexport const precautions = [\n    {\n        id : 1,\n        heading : 'Wash your hands',\n        description : `Wash your hands with soap and running water when hands are visibily dirty. Use alcohol based sanitizer if not visibily dirty. Wash your hands for atleast 20s when washing using the soap.`\n    },\n    {\n        id : 2,\n        heading : 'Protect Your self',\n        description : `Wash Your hands Thoroughly : \n                        - after coughing and sneezing\n                        - when caring for the sick\n                        - before, during and after preparing food\n                        - before eating\n                        - after toilet use\n                        - when hands are visibily dirty\n                        - after handling animals or animal waste`\n    },\n    {\n        id : 3,\n        heading : 'Protect Others',\n        description : `When coughing and sneezing cover mouth and nose with flexed elbow or tissue.\n                       Throw the tissue in closed bin immediately after use.\n                       Clean hands with alcohol based sanitizer or soap and water after sneezing.`\n    },\n    {\n        id : 4,\n        heading : 'Eat Healthy',\n        description : `Avoid junk foods, or non nutritous food. Eat foods which increase stamina. Prefer home cooked food always.`\n    },\n    {\n        id : 5,\n        heading : 'Stay Physically Active',\n        description : `Excercise Daily as it boosts metabolism and immunity.`\n    },\n    {\n        id : 6,\n        heading : 'Quitting Tobacco',\n        description : `This is a very good time to quit the use of Tobacco for societal well being.`\n    }\n]","import React, { useState } from 'react';\nimport { Container, Typography, Box, Chip, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { symptoms, precautions } from '../resources/symptoms';\nimport { Trail } from 'react-spring/renderprops';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '3vh'\n    },\n    leftBorder: {\n        borderLeft: '1rem solid green',\n        width: 'fit-content',\n        marginRight: '1rem'\n    },\n    chips: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n    hover: {\n        '&:hover': {\n            backgroundColor: '#2290A0',\n            transform: 'translateY(-1px)'\n        }\n    },\n    inline: {\n        display: 'inline'\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\nconst Precautions = (props) => {\n    const classes = useStyles();\n    const [selected, setSelected] = useState(0);\n    let precautionsList = precautions.map((precaution, index) => {\n        return (\n            <ListItem key={precaution.id}>\n                <ListItemText\n                    primary={\n                        <React.Fragment>\n                            <Typography variant=\"h5\" color=\"primary\">\n                                {precaution.heading}\n                            </Typography>\n                        </React.Fragment>\n                    }\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body1\"\n                                className={classes.inline}\n                                color=\"textSecondary\"\n                            >\n                                {precaution.description}\n                            </Typography>\n\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        );\n    });\n    return (\n        <Box textAlign=\"center\">\n            <Container maxWidth=\"md\" className={classes.root}>\n                <div className={classes.toolbar} />\n                <Typography variant=\"h4\">\n                    <span className={classes.leftBorder} />\n                        Precautions of Coronavirus\n                </Typography>\n                <Container maxWidth=\"md\">\n                    <Trail items={precautionsList} keys={item => item.key} from={{ opacity : 0 }} to={{ opacity : 1}}>\n                        {item => props => <div style={props}>{item}</div>}\n                    </Trail>\n                </Container>\n                <Typography variant=\"h4\">\n                    <span className={classes.leftBorder} />\n                        Symptoms Of Coronavirus\n                </Typography>\n                <div className={classes.toolbar} />\n                <div className={classes.chips}>\n                    {\n                        symptoms.map((symptom, index) => {\n                            if (selected === index) {\n                                return (\n                                    <Chip key={symptom.id} label={symptom.name} className={classes.hover} onClick={() => setSelected(index)} color=\"primary\" />\n                                );\n                            }\n                            else\n                                return (\n                                    <Chip key={symptom.id} label={symptom.name} className={classes.hover} onClick={() => setSelected(index)} />\n                                );\n                        })\n                    }\n                </div>\n                <div className={classes.toolbar} />\n                <Description selected={selected} />\n            </Container>\n        </Box>\n    );\n}\n\nconst Description = ({ selected }) => {\n    return (\n        <Container maxWidth=\"sm\">\n\n            {symptoms[selected].description.split('.').map((description, index) => {\n                return (\n                    <Typography key={index} variant=\"body1\" color=\"textSecondary\">{description} </Typography>\n                );\n            })}\n\n        </Container>\n    );\n}\n\nexport default Precautions;","export const STATE_NAMES = {\n    AP: 'Andhra Pradesh',\n    AR: 'Arunachal Pradesh',\n    AS: 'Assam',\n    BR: 'Bihar',\n    CT: 'Chhattisgarh',\n    GA: 'Goa',\n    GJ: 'Gujarat',\n    HR: 'Haryana',\n    HP: 'Himachal Pradesh',\n    JH: 'Jharkhand',\n    KA: 'Karnataka',\n    KL: 'Kerala',\n    MP: 'Madhya Pradesh',\n    MH: 'Maharashtra',\n    MN: 'Manipur',\n    ML: 'Meghalaya',\n    MZ: 'Mizoram',\n    NL: 'Nagaland',\n    OR: 'Odisha',\n    PB: 'Punjab',\n    RJ: 'Rajasthan',\n    SK: 'Sikkim',\n    TN: 'Tamil Nadu',\n    TG: 'Telangana',\n    TR: 'Tripura',\n    UT: 'Uttarakhand',\n    UP: 'Uttar Pradesh',\n    WB: 'West Bengal',\n    AN: 'Andaman and Nicobar Islands',\n    CH: 'Chandigarh',\n    DN: 'Dadra and Nagar Haveli and Daman and Diu',\n    DL: 'Delhi',\n    JK: 'Jammu and Kashmir',\n    LA: 'Ladakh',\n    LD: 'Lakshadweep',\n    PY: 'Puducherry',\n    TT: 'Total',\n    UN: 'Unassigned',\n  };\n\n  export const legend = ['Confirmed', 'Active', 'Recovered', 'Fatal'];","import React, { useState } from 'react';\nimport { Container, Typography,  Chip, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { zones } from '../resources/useData';\nimport useSWR from 'swr';\nimport { ZONES_INDIA } from '../constants/urls';\nimport { STATE_NAMES } from '../constants/constants';\nimport { Spring, animated } from 'react-spring/renderprops';\nimport Loading from './LoadingComponent';\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    chips: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n        fontSize: '2rem',\n    },\n    hover: {\n        '&:hover': {\n            backgroundColor: '#2290A0',\n            transform: 'translateY(-1px)'\n        }\n    }\n}));\n\nconst groupStates = (data, stateNames = STATE_NAMES) => {\n    if (!data) {\n        return {};\n    }\n    const states = data.reduce((statesList, currentValue) => {\n        if (!statesList[currentValue.statecode])\n            statesList[currentValue.statecode] = { name: '', districts: [] };\n        statesList[currentValue.statecode].districts.push(currentValue);\n        return statesList;\n    }, []);\n    let keys = Object.keys(states);\n    keys.forEach((key) => {\n        states[key].name = stateNames[key];\n    })\n    return states;\n}\n\nconst ZonesIndia = (props) => {\n    const classes = useStyles();\n    const { data } = useSWR(ZONES_INDIA, zones, { revalidateOnReconnect: true });\n    const [selectedState, setSelectedState] = useState('AP');\n    \n    if (data) {\n        let states = groupStates(data.zones);\n        let keys = Object.keys(states);\n        let statesList = keys.map((key) => {\n            if(key === selectedState)\n                return (<Chip key={key}\n                    label={states[key].name}\n                    avatar={<Avatar>{states[key].districts.length}</Avatar>}\n                    onClick={() => setSelectedState(key)}\n                    className={classes.hover} \n                    variant=\"outlined\"\n                    color=\"primary\"\n                    />);\n            else\n            return (\n                <Chip key={key}\n                    label={states[key].name}\n                    avatar={<Avatar>{states[key].districts.length}</Avatar>}\n                    onClick={() => setSelectedState(key)}\n                    className={classes.hover} \n                    variant=\"outlined\"\n                    />);\n        });\n        return (\n            <Container maxWidth=\"md\">\n                <div className={classes.toolbar} />\n                <Typography align=\"center\" variant=\"h4\"> Zone Classification in India </Typography>\n                <div className={classes.toolbar} />\n                {/* <div> */}\n                    <Spring native from={{opacity : 0}} to={{ opacity : 1 }}>\n                        {props => <animated.div style={props} className={classes.chips}>{statesList}</animated.div>}\n                    </Spring>\n                {/* </div> */}\n                <div className={classes.toolbar} />\n                <DisplayZones state={states[selectedState]} />\n            </Container>\n        );\n    }\n    else\n        return (\n            <Loading />\n        );\n}\n\nconst DisplayZones = ({ state }) => {\n    const classes = useStyles();\n    const districts = state.districts.map((district) => {\n        if(district.zone === 'Green'){\n            return <Chip key={district.districtcode} style={{backgroundColor :\"#0F0\", color : \"#000\"}} label={district.district} className={classes.hover}/>\n        }\n        else if(district.zone === 'Orange'){\n            return <Chip key={district.districtcode} style={{backgroundColor :\"#FF8C00\", color : \"#000\"}} label={district.district} className={classes.hover}/>\n        }   \n        else {\n            return <Chip key={district.districtcode} style={{backgroundColor :\"#F00\"}} label={district.district} className={classes.hover}/>\n        }\n    });\n    return (\n        <Container maxWidth=\"sm\" className={classes.chips}>\n            {districts}\n            <div className={classes.toolbar} />\n        </Container>\n    );\n}\n\nexport default ZonesIndia;","import React, { useState } from 'react';\nimport { Container, Typography, Button, ButtonGroup } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { COUNTRY_DATA } from '../constants/urls';\nimport { countryData } from '../resources/useData';\nimport useSWR from 'swr';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '0 auto'\n    },\n    toolbar: theme.mixins.toolbar,\n    tooltip: {\n        position: 'relative',\n        width: 'fit-content',\n        backgroundColor: 'black',\n        '&::after': {\n            content: '\" \"',\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            marginLeft: '-5px',\n            borderWidth: '5px',\n            borderStyle: 'solid',\n            borderColor: 'black transparent transparent transparent'\n        }\n    },\n    tooltiptext: {\n        color: 'white',\n        textAlign: 'left',\n        padding: '5px 2px',\n    },\n    span: {\n        width: '1rem',\n        height: '1rem',\n        paddingLeft: '10px',\n        display: 'inline-block',\n    },\n    button: {\n        fontSize: '0.7rem',\n        padding : '2px'\n    }\n}));\n\nconst DayWiseGraph = () => {\n    const classes = useStyles();\n    const { data: dayWiseData } = useSWR(COUNTRY_DATA, countryData, { refreshWhenOffline: true });\n    var dayWiseDataFiltered = [];\n    var pieData = [];\n    if (dayWiseData) {\n        dayWiseDataFiltered = dayWiseData['cases_time_series'].filter((day) => moment(day['date'], 'DD MMM ').isAfter(moment('02-03-2020', 'DD-MM-YYYY')));\n        let tempData = dayWiseData['cases_time_series'][dayWiseData['cases_time_series'].length - 1];\n        pieData.push(parseInt(tempData['totalconfirmed']));\n        pieData.push(parseInt(tempData['totaldeceased']));\n        pieData.push(parseInt(tempData['totalrecovered']));\n    }\n    return (\n        <Container maxWidth=\"md\" className={classes.root}>\n            <div className={classes.toolbar} />\n            <Typography variant=\"h4\" align=\"center\"> Day Wise Statistics </Typography>\n            <div className={classes.toolbar} />\n            {dayWiseData ? <ShowChart data={dayWiseDataFiltered} parameter={'dailyconfirmed'}\n                label={'Daily Confirmed Cases - India'}\n                backgroundColor={'rgba(255,10,10,0.8)'}\n                borderColor={'rgb(255,10,10)'} /> : ''}\n            <div className={classes.toolbar} />\n            {dayWiseData ? <ShowChart data={dayWiseDataFiltered} parameter={'dailyrecovered'}\n                label={'Daily Recovered Cases - India'}\n                backgroundColor={'rgba(10,255,10,0.8)'}\n                borderColor={'rgb(10,255,10)'} /> : ''}\n            <div className={classes.toolbar} />\n            {dayWiseData ? <ShowChart data={dayWiseDataFiltered} parameter={'dailydeceased'}\n                label={'Daily Fatal Cases - India'}\n                backgroundColor={'rgba(200,10,100,0.8)'}\n                borderColor={'rgb(200,10,100)'} /> : ''}\n            <div className={classes.toolbar} />\n            {dayWiseData ? <ShowPieChart data={pieData} labels={['Active Cases', 'Fatal Cases', 'Recovered Cases']} /> : ''}\n            <div className={classes.toolbar} />\n        </Container>\n    );\n}\n\nconst ShowChart = ({ data, parameter, label, backgroundColor, borderColor }) => {\n    const classes = useStyles();\n    let [startDate, setStartDate] = useState(moment('02-03-2020', 'DD-MM-YYYY'));\n    let max = data.reduce((acc,curval)=> parseInt(curval[parameter]) > parseInt(acc[parameter]) ? curval : acc );\n    let stepSize = (parseInt(max[parameter])/4).toFixed(0);\n    max = (parseInt(max[parameter])*1.10).toFixed(0);\n    let chartData = {\n        labels: data.filter((day) => moment(day['date'], 'DD MMM ').isAfter(startDate)).map((day) => day['date']),\n        datasets: [\n            {\n                label: label,\n                data: data.filter((day) => moment(day['date'], 'DD MMM ').isAfter(startDate)).map((day) => day[parameter]),\n                backgroundColor: data.map((day) => backgroundColor),\n                borderColor: data.map((day) => borderColor),\n                borderWidth: 1,\n                hoverBackgroundColor: 'white',\n                hoverBorderColor: 'white'\n            }\n        ]\n    };\n    return (\n        <Container>\n            <Bar data={chartData} width={100} height={50} options={{ maintainAspectRatio: true, responsive : true, scales : { yAxes : [ { display : true ,ticks : { display : true, min : 0, max : parseInt(max), stepSize: parseInt(stepSize) }}]} }} />\n            \n                <ButtonGroup size=\"small\" aria-label=\"Statistics Filter Buttons\" variant=\"outlined\" fullWidth={true} style={{marginTop : '1rem'}}>\n\n                    <Button color=\"primary\" variant=\"outlined\" className={classes.button} onClick={() => setStartDate(moment('02-03-2020', 'DD-MM-YYYY'))}> Beginning </Button>\n               \n                    <Button color=\"secondary\" variant=\"outlined\" className={classes.button} onClick={() => setStartDate(moment().subtract(1, 'month'))}>Past Month</Button>\n                \n                    <Button style={{ color: 'white' }} variant=\"outlined\" className={classes.button} onClick={() => setStartDate(moment().subtract(2, 'weeks'))}> Past 2 Weeks </Button>\n                </ButtonGroup>\n                            \n        </Container>\n    );\n}\n\nconst ShowPieChart = ({ data, labels }) => {\n    const classes = useStyles();\n    let pieData = [];\n    const sum = data[0];\n    let [open, setOpen] = useState(false);\n    let [tooltip, setTooltip] = useState({\n        top: 0,\n        left: 0,\n        percent: 0.0,\n        value: 0,\n        color: '',\n        label: ''\n    });\n    pieData.push(data[0] - (data[1] + data[2]));\n    pieData.push(data[1]);\n    pieData.push(data[2]);\n    let _chartRef = React.createRef();\n    let chart = {\n        labels: labels,\n        datasets: [\n            {\n                label: 'Distribution of Cases Status',\n                data: pieData,\n                backgroundColor: ['red', 'orange', 'green'],\n                borderColor: ['red', 'orange', 'green'],\n                borderWidth: 1\n            }\n        ]\n    }\n    const setPositionAndData = (top, left, percent, value, color, label) => {\n        setTooltip({\n            color: color, top: top, left: left, label: label,\n            percent: percent, value: value\n        });\n        setOpen(true);\n        setTimeout(() => setOpen(false), 2000);\n    }\n    return (\n        <Container maxWidth=\"sm\">\n            <Pie width={30} height={30} data={chart} ref={_chartRef} options={{\n                tooltips: {\n                    enabled: false,\n                    // mode : 'x',\n                    intersect: false,\n                    custom: (tooltipModel) => {\n                        chart = _chartRef.current;\n                        if (!chart) {\n                            return;\n                        }\n                        if (tooltipModel.opacity === 0) {\n                            return;\n                        }\n\n                        const position = chart.chartInstance.canvas.getBoundingClientRect();\n                        const left = tooltipModel.caretX;\n                        const top = position.top - tooltipModel.caretY;\n                        const color = tooltipModel.labelColors[0].backgroundColor;\n                        const label = tooltipModel.body[0]['lines'][0].split(':')[0];\n                        const value = parseInt(tooltipModel.body[0]['lines'][0].split(':')[1]);\n                        const percent = (value * 100 / sum);\n                        setPositionAndData(top, left, percent, value, color, label);\n                    }\n                }\n            }} />\n            <div hidden={!open} className={classes.tooltip} style={{ top: tooltip.top, left: tooltip.left }}>\n\n                <p className={classes.tooltiptext}> <span className={classes.span} style={{ backgroundColor: tooltip.color }}></span>{tooltip.label}</p>\n                <p className={classes.tooltiptext}> Percentage : {parseFloat(tooltip.percent).toFixed(2)} % Cases </p>\n                <p className={classes.tooltiptext}> Cases : {tooltip.value}</p>\n            </div>\n        </Container>\n    );\n}\n\nexport default DayWiseGraph;","import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Table, TableRow, TableBody, TableCell, TableHead, TableContainer } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useSWR from 'swr';\nimport { STATE_NAMES } from '../constants/constants';\nimport { STATES_TOTAL } from '../constants/urls';\nimport { statesTotal } from '../resources/useData';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: '2rem',\n        color: 'white',\n        paddingTop: '2rem'\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\n\n// const processDailyData = (data, statecode) => {\n//     if(!data){\n//         return [];\n//     }\n//     // let temp = data['states_daily'];\n//     // let code = statecode.toLowerCase();\n//     let keys = Object.keys(data['states_daily']);\n//     let dailyData = keys.map((key) => {\n        \n//     });\n//     return dailyData;\n// }\n\nconst processTotalData = (data, statecode) => {\n    if (!data) {\n        return [];\n    }\n    let state = data[statecode]['districts'];\n    let keys = Object.keys(state);\n    let total = {\n        district: 'Total',\n        confirmed: 0,\n        tested: 0,\n        recovered: 0,\n        deceased: 0\n    }\n    let stateObj = keys.map((key) => {\n        total['confirmed'] += (state[key]['total']['confirmed'] ? state[key]['total']['confirmed'] : 0);\n        total['deceased'] += state[key]['total']['deceased'] ? state[key]['total']['deceased'] : 0;\n        total['recovered'] += state[key]['total']['recovered'] ? state[key]['total']['recovered'] : 0;\n        total['tested'] += state[key]['total']['tested'] ? state[key]['total']['tested'] : 0;\n        return {\n            district: key,\n            confirmed: state[key]['total']['confirmed'] ? state[key]['total']['confirmed'] : 0,\n            tested: state[key]['total']['tested'] ? state[key]['total']['tested'] : 0,\n            recovered: state[key]['total']['recovered'] ? state[key]['total']['recovered'] : 0,\n            deceased: state[key]['total']['deceased'] ? state[key]['total']['deceased'] : 0\n        };\n    });\n    stateObj.push(total);\n    return stateObj;\n}\n\nconst StateGraph = ({ match }) => {\n    const classes = useStyles();\n    // const { data: daily_data } = useSWR(STATES_DAILY, statesDaily);\n    const { data: total_data } = useSWR(STATES_TOTAL, statesTotal);\n    // const [p_daily_data, setPDailyData] = useState([]);\n    const [p_total_data, setPTotalData] = useState([]);\n    // useEffect(() => {\n    //     let temp = processDailyData(daily_data, match.params.statecode);\n    //     setPDailyData(temp);\n    // }, [daily_data, match.params.statecode]);\n\n    useEffect(() => {\n        let temp = processTotalData(total_data, match.params.statecode);\n        setPTotalData(temp);\n    }, [total_data, match.params.statecode])\n    return (\n        <Container maxWidth=\"md\" className={classes.root}>\n            <Typography align=\"center\" variant=\"h5\">{STATE_NAMES[match.params.statecode]}</Typography>\n            <div className={classes.toolbar} />\n            {/* {p_daily_data} */}\n            {p_total_data.length !== 0 ? <StateTable data={p_total_data} /> : ''}\n            <StatePieChart />\n        </Container>\n    );\n}\n\nconst tableheaders = [\n    { _id: 'district', name: 'District', datatype: 'string' },\n    { _id: 'confirmed', name: 'Confirmed', datatype: 'number' },\n    { _id: 'tested', name: 'Tested', datatype: 'number' },\n    { _id: 'recovered', name: 'Cured', datatype: 'number' },\n    { _id: 'deceased', name: 'Deaths', datatype: 'number' }\n]\n\nconst StateTable = (data) => {\n    return (\n        <TableContainer>\n            <Table stickyHeader={true} style={{ overflowX: 'scroll' }}>\n                <TableHead>\n                    <TableRow>\n                        {tableheaders.map((cell) => {\n                            return (<TableCell key={cell._id}>{cell.name}</TableCell>);\n                        })}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        data.data.map((row) => {\n                            return (\n                                <TableRow key={row.district}>\n                                    <TableCell>\n                                        {row.district}\n                                    </TableCell>\n\n                                    <TableCell>\n                                        {row.confirmed}\n                                    </TableCell>\n\n                                    <TableCell>\n                                        {row.tested}\n                                    </TableCell>\n\n                                    <TableCell>\n                                        {row.recovered}\n                                    </TableCell>\n\n                                    <TableCell>\n                                        {row.deceased}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nconst StatePieChart = (data) => {\n    return (\n        <Container>\n            {'   '}\n        </Container>\n    );\n}\n\nexport default StateGraph;","import React from 'react';\nimport HomeIcon from '@material-ui/icons/HomeTwoTone';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport SecurityIcon from '@material-ui/icons/Security';\nimport Home from '../components/HomeComponent';\nimport Updates from '../components/UpdatesComponent';\nimport Donate from '../components/DonateComponent';\nimport Precautions from '../components/PrecautionsComponent';\nimport ZonesIndia from '../components/ZonesIndiaComponent';\nimport DayWiseGraph from '../components/DayWiseGraphComponent';\nimport StateGraph from '../components/StateGraph';\n\nexport const list = [\n    {\n        value : 'Home',\n        icon : <HomeIcon />,\n        url : '/covid-dashboard',\n        component : Home,\n        show : true,\n    },\n    {\n        value : 'Statistics',\n        icon : <TrendingUpIcon />,\n        url : '/covid-dashboard/statistics',\n        component : DayWiseGraph,\n        show : true,\n    },\n    {\n        value : 'Zones In India',\n        icon : <PlaceIcon />,\n        url : '/covid-dashboard/zones',\n        component : ZonesIndia,\n        show : true,\n    },\n    {\n        value :'Updates',\n        icon : <AnnouncementIcon />,\n        url : '/covid-dashboard/updates',\n        component : Updates,\n        show : true,\n    },\n    {\n        value : 'Precautions',\n        icon : <SecurityIcon />,\n        url : '/covid-dashboard/precautions',\n        component : Precautions,\n        show : true,\n    },\n    {\n        value : 'Donate',\n        icon : <AttachMoneyIcon />,\n        url : '/covid-dashboard/donate',\n        component : Donate,\n        show : true,\n    },\n    {\n        value : 'State',\n        icon : '',\n        url : '/covid-dashboard/state/:statecode',\n        component : StateGraph,\n        show : false,\n    }\n];","import React from 'react';\nimport { ListItemIcon, ListItem, List, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { list } from '../resources/sidenav';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    navStyle: {\n        display: 'flex',\n    },\n    listItem : {\n        width : 'auto'\n    },\n    listItemIcon : {\n        marginLeft : '1em',\n        color:'white'\n    },\n    listItemText : {\n        borderBottom : '2px solid transparent',\n        '&:hover' : {\n            borderBottom : '2px solid white'\n        }\n    },\n    navLink : {\n        textDecoration : 'none',        \n        color : 'white',\n        opacity : '0.8'\n        \n    },\n    activeNavLink : {\n        opacity : '1'\n    }\n}));\n\nconst NavbarList = (props) => {\n    const classes = useStyles();\n    const navlist = list.filter((item) => item.show === true ).map((item,index) =>{\n        return (\n            <NavLink exact to={item.url} key={item.url} className={classes.navLink} activeClassName={classes.activeNavLink}>\n                <ListItem button key={item.value} disableGutters className={classes.listItem}>\n                    <ListItemText className={classes.listItemText}>{item.value}</ListItemText>\n                    <ListItemIcon className={classes.listItemIcon}>{item.icon}</ListItemIcon>\n                </ListItem>\n            </NavLink>\n        );\n    });\n    return (\n        <List component=\"ul\" className={classes.navStyle}>\n            {navlist}\n        </List>\n    );\n}\n\nexport default NavbarList;","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n    Box,\n    CssBaseline,\n    AppBar,\n    IconButton,\n    Toolbar,\n    Divider,\n    Drawer,\n    Hidden,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n} from '@material-ui/core';\nimport NavbarList from './NavbarList';\nimport { list } from '../resources/sidenav';\nimport { NavLink } from 'react-router-dom';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            // used if we want to restrict the app bar width to leave the space for drawer\n            // width: `calc(100% - ${drawerWidth}px)`, \n\n            // marginLeft: drawerWidth,\n            width: '100%',\n            marginLeft: 0\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    navbar: {\n        marginLeft: 'auto'\n    },\n    navLink : {\n        textDecoration : 'none',\n        color : 'gray'\n    }\n}));\n\nconst Header = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div>\n            <Divider />\n            <List>\n                {list.filter((item)=> item.show === true ).map((item, index) => (\n                    <NavLink to={item.url} key={item.value} className={classes.navLink} onClick={handleDrawerToggle}>\n                        <ListItem button>\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <ListItemText primary={item.value} />\n                        </ListItem>\n                    </NavLink>\n                ))}\n            </List>\n        </div>\n    );\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"static\" className={classes.appBar} color=\"inherit\">\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Box display={{ xs: 'none', md: 'block' }}>\n                        <Typography variant=\"h5\" style={{ \"marginLeft\": \"5vw\" }}> CovidAnalytics </Typography>\n                    </Box>\n                    <Box display={{ xs: 'block', md: 'none' }}>\n                        <Typography variant=\"h5\"> CovidAnalytics </Typography>\n                    </Box>\n                    <Box display={{ xs: 'none', sm: 'block' }} className={classes.navbar}>\n                        <NavbarList />\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            <Hidden smUp implementation=\"css\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    classes={{\n                        paper: classes.drawerPaper\n                    }}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                >\n                    {drawer}\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FreeBreakfastCoffee from '@material-ui/icons/FreeBreakfast';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        height: '10vh',\n        backgroundColor : \"primary\",\n        // color: 'white',\n        marginTop: '5vh',\n        // display : 'flex',\n        textAlign : 'center',\n        paddingTop : '2vh'\n    }\n}));\n\nconst Footer = (props) => {\n    const classes = useStyles();\n    return (\n        <Container maxWidth=\"xl\" className={classes.content}>\n\n            <Typography variant=\"body1\">\n                Made with <FavoriteIcon color=\"error\" /> and <FreeBreakfastCoffee color=\"action\" /> while at Home.\n            </Typography>\n\n        </Container>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Container, Box, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root : {\n        border : '1px solidi red',\n        backgroundColor : 'orange',\n        color : 'white',\n        borderRadius : '5px 3px',\n        fontWeight : 'bolder',       \n        '&:hover' : {\n            boxShadow : '1px 1px',\n            transform : 'scale(1.01)'\n        }\n    },\n    text : {\n        textDecoration : 'none',\n        color : 'white'\n    }\n}));\n\nconst Helpline = (props) => {\n    const classes = useStyles();\n    return (\n        <Container maxWidth=\"sm\" style={{\"marginTop\" : \"2vh\"}}>\n            <Box p={4} className={classes.root}>\n                <Typography variant=\"h5\">\n                    Govt Of India Coronavirus Helpline                   \n                </Typography>\n                <Typography variant=\"body1\">\n                    Official Helpline At : \n                    <a href=\"tel:+911123978046\" className={classes.text}>\n                         +91-11-23978046   \n                    </a>\n                </Typography>\n                <Typography variant=\"body1\">\n                    Toll Free Helpline At : \n                    <a href=\"tel:1075\" className={classes.text}> 1075</a>\n                    \n                </Typography>\n                <Typography>\n\n                    Email Id Helpline : <a href=\"mailto:ncov2019@gov.in\" className={classes.text}> ncov2019@gov.in</a>\n                </Typography>\n            </Box>\n        </Container>\n    );\n}\n\nexport default Helpline;","import React, { Fragment } from 'react';\nimport './App.css';\nimport Header from './components/HeaderComponent';\nimport Footer from './components/FooterComponent';\nimport Helpline from './components/HelplineComponent';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { list } from './resources/sidenav';\n\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <Header />\n        <Container style={{ \"minHeight\" : \"75vh\"}}>\n          <Switch>\n            {\n              list.map((element) => {\n                return (<Route key={element.url} exact path={element.url} component={element.component}/>);\n              })\n            }\n          </Switch>\n        </Container>\n        <Helpline />\n        <Footer />\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            'Pangolin',\n            'Overpass',\n            'Roboto',\n            'sans-serif'\n        ].join(',')\n    },\n    palette: {\n        \"common\":\n            { \"black\": \"#000\", \"white\": \"#fff\" },\n        \"type\": \"dark\",\n        \"primary\":\n        {\n            \"main\": \"#90caf9\", \"light\": \"rgb(166, 212, 250)\", \"dark\": \"rgb(100, 141, 174)\", \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\n        },\n        \"secondary\": { \"main\": \"#a48fb1\", \"light\": \"rgb(220, 165, 192)\", \"dark\": \"rgb(170, 100, 123)\", \"contrastText\": \"rgba(0, 0, 0, 0.87)\" },\n        \"error\": { \"light\": \"#e57373\", \"main\": \"#f44336\", \"dark\": \"#d32f2f\", \"contrastText\": \"#fff\" },\n        \"warning\": { \"light\": \"#ffb74d\", \"main\": \"#ff9800\", \"dark\": \"#f57c00\", \"contrastText\": \"rgba(0, 0, 0, 0.87)\" },\n        \"info\": { \"light\": \"#64b5f6\", \"main\": \"#2196f3\", \"dark\": \"#1976d2\", \"contrastText\": \"#fff\" },\n        \"success\": { \"light\": \"#81c784\", \"main\": \"#4caf50\", \"dark\": \"#388e3c\", \"contrastText\": \"rgba(0, 0, 0, 0.87)\" },\n        \"grey\": { \"50\": \"#fafafa\", \"100\": \"#f5f5f5\", \"200\": \"#eeeeee\", \"300\": \"#e0e0e0\", \"400\": \"#bdbdbd\", \"500\": \"#9e9e9e\", \"600\": \"#757575\", \"700\": \"#616161\", \"800\": \"#424242\", \"900\": \"#212121\", \"A100\": \"#d5d5d5\", \"A200\": \"#aaaaaa\", \"A400\": \"#303030\", \"A700\": \"#616161\" },\n        \"contrastThreshold\": 3, \"tonalOffset\": 0.5,\n        \"text\": { \"primary\": \"#fff\", \"secondary\": \"rgba(255, 255, 255, 0.7)\", \"disabled\": \"rgba(255, 255, 255, 0.5)\", \"hint\": \"rgba(255, 255, 255, 0.5)\", \"icon\": \"rgba(255, 255, 255, 0.5)\" },\n        \"divider\": \"rgba(255, 255, 255, 0.12)\",\n        \"background\": { \"paper\": \"#424242\", \"default\": \"#121212\", \"level2\": \"#333\", \"level1\": \"#212121\" },\n        \"action\": { \"active\": \"#fff\", \"hover\": \"rgba(255, 255, 255, 0.08)\", \"hoverOpacity\": 0.08, \"selected\": \"rgba(255, 255, 255, 0.16)\", \"selectedOpacity\": 0.16, \"disabled\": \"rgba(255, 255, 255, 0.3)\", \"disabledBackground\": \"rgba(255, 255, 255, 0.12)\", \"disabledOpacity\": 0.38, \"focus\": \"rgba(255, 255, 255, 0.12)\", \"focusOpacity\": 0.12, \"activatedOpacity\": 0.24 }\n    }\n\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport  theme from './themes/default';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}